// <auto-generated />
using System;
using AgroInfoBack.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgroInfoBack.Migrations
{
    [DbContext(typeof(AgroContext))]
    partial class AgroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Agrotoxico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAplicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotaResultado")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlantacaoId");

                    b.ToTable("Agrotoxicos");
                });

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Fertilizante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAplicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotaResultado")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Quantidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlantacaoId");

                    b.ToTable("Fertilizantes");
                });

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Plantacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemMeio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuantidadeObtida")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plantacoes");
                });

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Agrotoxico", b =>
                {
                    b.HasOne("AgroInfoBack.Models.PlantacaoModel+Plantacao", "Plantacao")
                        .WithMany("Agrotoxicos")
                        .HasForeignKey("PlantacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plantacao");
                });

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Fertilizante", b =>
                {
                    b.HasOne("AgroInfoBack.Models.PlantacaoModel+Plantacao", "Plantacao")
                        .WithMany("Fertilizantes")
                        .HasForeignKey("PlantacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plantacao");
                });

            modelBuilder.Entity("AgroInfoBack.Models.PlantacaoModel+Plantacao", b =>
                {
                    b.Navigation("Agrotoxicos");

                    b.Navigation("Fertilizantes");
                });
#pragma warning restore 612, 618
        }
    }
}
